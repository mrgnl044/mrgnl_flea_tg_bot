"""
–û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏ –æ–±—ä—è–≤–ª–µ–Ω–∏–π –¥–ª—è —Ç–µ–ª–µ–≥—Ä–∞–º-–±–æ—Ç–∞ –æ–±—ä—è–≤–ª–µ–Ω–∏–π Fixed Gear Perm.
"""

import logging
from aiogram import types

from ..bot import bot, dp
from ..config import CHANNEL_ID
from ..utils import create_ad_text, create_media_group
from ..keyboards import get_sold_keyboard, get_create_new_ad_keyboard
from ..database import db

logger = logging.getLogger(__name__)

def register_handlers(dp):
    """
    –†–µ–≥–∏—Å—Ç—Ä–∏—Ä—É–µ—Ç –≤—Å–µ –æ–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥—É–ª—è
    
    :param dp: –î–∏—Å–ø–µ—Ç—á–µ—Ä
    """
    # –û–±—Ä–∞–±–æ—Ç—á–∏–∫–∏ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    dp.callback_query.register(approve_ad, lambda c: c.data.startswith("approve_"))
    dp.callback_query.register(reject_ad, lambda c: c.data.startswith("reject_"))

async def approve_ad(callback: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ–¥–æ–±—Ä–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º
    
    :param callback: –û–±—Ä–∞—Ç–Ω—ã–π –≤—ã–∑–æ–≤
    """
    await callback.answer()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ callback_data
    ad_id = int(callback.data.split("_")[1])
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    ad_data = db.get_moderation_ad(ad_id)
    
    if not ad_data:
        await callback.message.reply("–î–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã!")
        return
    
    # –§–æ—Ä–º–∏—Ä—É–µ–º —Ç–µ–∫—Å—Ç –æ–±—ä—è–≤–ª–µ–Ω–∏—è –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ
    post_text = create_ad_text(ad_data)
    
    channel_msg_id = None
    
    # –ü—É–±–ª–∏–∫—É–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ –∫–∞–Ω–∞–ª–µ
    photos = ad_data['photos']
    if photos:
        # –°–æ–∑–¥–∞–µ–º –≥—Ä—É–ø–ø—É –º–µ–¥–∏–∞ –¥–ª—è –ø—É–±–ª–∏–∫–∞—Ü–∏–∏ –≤ –∫–∞–Ω–∞–ª–µ
        media_group = create_media_group(photos, post_text, "HTML")
        
        # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º –≥—Ä—É–ø–ø—É —Ñ–æ—Ç–æ–≥—Ä–∞—Ñ–∏–π –≤ –∫–∞–Ω–∞–ª
        channel_msgs = await bot.send_media_group(chat_id=CHANNEL_ID, media=media_group)
        channel_msg_id = channel_msgs[0].message_id
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä—É –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    try:
        await bot.send_message(
            chat_id=ad_data['user_id'],
            text=(
                "‚úÖ <b>–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ–¥–æ–±—Ä–µ–Ω–æ!</b>\n\n"
                "üéâ <i>–û–Ω–æ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–æ –≤ –∫–∞–Ω–∞–ª–µ.</i> –ö–æ–≥–¥–∞ –ø—Ä–æ–¥–∞—à—å - –Ω–∞–∂–º–∏ <u>¬´–ü—Ä–æ–¥–∞–Ω–æ¬ª</u>"
            ),
            reply_markup=get_sold_keyboard(channel_msg_id),
            parse_mode="HTML"
        )
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {ad_data['user_id']}: {e}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    await callback.message.edit_text(
        f"{callback.message.text}\n\n‚úÖ –û–î–û–ë–†–ï–ù–û",
        reply_markup=None
    )
    
    # –°–æ—Ö—Ä–∞–Ω—è–µ–º –æ–±—ä—è–≤–ª–µ–Ω–∏–µ –≤ –±–∞–∑—É –¥–∞–Ω–Ω—ã—Ö –∫–∞–∫ –æ–ø—É–±–ª–∏–∫–æ–≤–∞–Ω–Ω–æ–µ
    published_ad_id = db.save_published_ad(
        ad_data['user_id'], 
        ad_data, 
        channel_msg_id, 
        int(CHANNEL_ID)
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    db.update_moderation_status(
        ad_id, 
        'approved', 
        callback.from_user.id,
        callback.message.message_id,
        callback.message.chat.id
    )

async def reject_ad(callback: types.CallbackQuery):
    """
    –û–±—Ä–∞–±–æ—Ç—á–∏–∫ –æ—Ç–∫–ª–æ–Ω–µ–Ω–∏—è –æ–±—ä—è–≤–ª–µ–Ω–∏—è –º–æ–¥–µ—Ä–∞—Ç–æ—Ä–æ–º
    
    :param callback: –û–±—Ä–∞—Ç–Ω—ã–π –≤—ã–∑–æ–≤
    """
    await callback.answer()
    
    # –ò–∑–≤–ª–µ–∫–∞–µ–º ID –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ callback_data
    ad_id = int(callback.data.split("_")[1])
    
    # –ü–æ–ª—É—á–∞–µ–º –¥–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –∏–∑ –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö
    ad_data = db.get_moderation_ad(ad_id)
    
    if not ad_data:
        await callback.message.reply("–î–∞–Ω–Ω—ã–µ –æ–±—ä—è–≤–ª–µ–Ω–∏—è –Ω–µ –Ω–∞–π–¥–µ–Ω—ã.")
        return
    
    # –û—Ç–ø—Ä–∞–≤–ª—è–µ–º —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –∞–≤—Ç–æ—Ä—É –æ–±—ä—è–≤–ª–µ–Ω–∏—è
    try:
        await bot.send_message(
            chat_id=ad_data['user_id'],
            text=(
                "‚ùå <b>–û–±—ä—è–≤–ª–µ–Ω–∏–µ –æ—Ç–∫–ª–æ–Ω–µ–Ω–æ</b>\n\n"
                "üîÑ <i>–°–æ–∑–¥–∞–π –Ω–æ–≤–æ–µ –æ–±—ä—è–≤–ª–µ–Ω–∏–µ —Å –ª—É—á—à–∏–º–∏ —Ñ–æ—Ç–æ –∏ –æ–ø–∏—Å–∞–Ω–∏–µ–º.</i>"
            ),
            reply_markup=get_create_new_ad_keyboard(),
            parse_mode="HTML"
        )
    except Exception as e:
        logger.error(f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ—Ç–ø—Ä–∞–≤–∏—Ç—å —É–≤–µ–¥–æ–º–ª–µ–Ω–∏–µ –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—é {ad_data['user_id']}: {e}")
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å–æ–æ–±—â–µ–Ω–∏–µ –≤ —á–∞—Ç–µ –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    await callback.message.edit_text(
        f"{callback.message.text}\n\n‚ùå –û–¢–ö–õ–û–ù–ï–ù–û",
        reply_markup=None
    )
    
    # –û–±–Ω–æ–≤–ª—è–µ–º —Å—Ç–∞—Ç—É—Å –º–æ–¥–µ—Ä–∞—Ü–∏–∏
    db.update_moderation_status(
        ad_id, 
        'rejected', 
        callback.from_user.id,
        callback.message.message_id,
        callback.message.chat.id
    ) 